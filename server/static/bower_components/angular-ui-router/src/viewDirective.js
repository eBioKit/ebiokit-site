$ViewDirective.$inject=["$state","$injector","$uiViewScroll","$interpolate","$q"];function $ViewDirective($state,$injector,$uiViewScroll,$interpolate,$q){function getService(){return $injector.has?function(service){return $injector.has(service)?$injector.get(service):null}:function(service){try{return $injector.get(service)}catch(e){return null}}}var service=getService(),$animator=service("$animator"),$animate=service("$animate");function getRenderer(attrs,scope){var statics=function(){return{enter:function(element,target,cb){target.after(element);cb()},leave:function(element,cb){element.remove();cb()}}};if($animate){return{enter:function(element,target,cb){if(angular.version.minor>2){$animate.enter(element,null,target).then(cb)}else{$animate.enter(element,null,target,cb)}},leave:function(element,cb){if(angular.version.minor>2){$animate.leave(element).then(cb)}else{$animate.leave(element,cb)}}}}if($animator){var animate=$animator&&$animator(scope,attrs);return{enter:function(element,target,cb){animate.enter(element,null,target);cb()},leave:function(element,cb){animate.leave(element);cb()}}}return statics()}var directive={restrict:"ECA",terminal:true,priority:400,transclude:"element",compile:function(tElement,tAttrs,$transclude){return function(scope,$element,attrs){var previousEl,currentEl,currentScope,latestLocals,onloadExp=attrs.onload||"",autoScrollExp=attrs.autoscroll,renderer=getRenderer(attrs,scope),inherited=$element.inheritedData("$uiView");scope.$on("$stateChangeSuccess",function(){updateView(false)});updateView(true);function cleanupLastView(){if(previousEl){previousEl.remove();previousEl=null}if(currentScope){currentScope.$destroy();currentScope=null}if(currentEl){var $uiViewData=currentEl.data("$uiViewAnim");renderer.leave(currentEl,function(){$uiViewData.$$animLeave.resolve();previousEl=null});previousEl=currentEl;currentEl=null}}function updateView(firstTime){var newScope,name=getUiViewName(scope,attrs,$element,$interpolate),previousLocals=name&&$state.$current&&$state.$current.locals[name];if(!firstTime&&previousLocals===latestLocals)return;newScope=scope.$new();latestLocals=$state.$current.locals[name];newScope.$emit("$viewContentLoading",name);var clone=$transclude(newScope,function(clone){var animEnter=$q.defer(),animLeave=$q.defer();var viewAnimData={$animEnter:animEnter.promise,$animLeave:animLeave.promise,$$animLeave:animLeave};clone.data("$uiViewAnim",viewAnimData);renderer.enter(clone,$element,function onUiViewEnter(){animEnter.resolve();if(currentScope){currentScope.$emit("$viewContentAnimationEnded")}if(angular.isDefined(autoScrollExp)&&!autoScrollExp||scope.$eval(autoScrollExp)){$uiViewScroll(clone)}});cleanupLastView()});currentEl=clone;currentScope=newScope;currentScope.$emit("$viewContentLoaded",name);currentScope.$eval(onloadExp)}}}};return directive}$ViewDirectiveFill.$inject=["$compile","$controller","$state","$interpolate"];function $ViewDirectiveFill($compile,$controller,$state,$interpolate){return{restrict:"ECA",priority:-400,compile:function(tElement){var initial=tElement.html();return function(scope,$element,attrs){var current=$state.$current,name=getUiViewName(scope,attrs,$element,$interpolate),locals=current&&current.locals[name];if(!locals){return}$element.data("$uiView",{name:name,state:locals.$$state});$element.html(locals.$template?locals.$template:initial);var resolveData=angular.extend({},locals);scope[locals.$$resolveAs]=resolveData;var link=$compile($element.contents());if(locals.$$controller){locals.$scope=scope;locals.$element=$element;var controller=$controller(locals.$$controller,locals);if(locals.$$controllerAs){scope[locals.$$controllerAs]=controller;scope[locals.$$controllerAs][locals.$$resolveAs]=resolveData}if(isFunction(controller.$onInit))controller.$onInit();$element.data("$ngControllerController",controller);$element.children().data("$ngControllerController",controller)}link(scope)}}}}function getUiViewName(scope,attrs,element,$interpolate){var name=$interpolate(attrs.uiView||attrs.name||"")(scope);var uiViewCreatedBy=element.inheritedData("$uiView");return name.indexOf("@")>=0?name:name+"@"+(uiViewCreatedBy?uiViewCreatedBy.state.name:"")}angular.module("ui.router.state").directive("uiView",$ViewDirective);angular.module("ui.router.state").directive("uiView",$ViewDirectiveFill);